package $gns{package};

import java.sql.Timestamp;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;

import $gns{entity_full_class};
import com.ganesha.basicweb.model.Pagination;
import com.ganesha.basicweb.modules.BusinessLogic;
import com.ganesha.basicweb.utility.GeneralConstants;
import com.ganesha.basicweb.utility.GeneralConstants.ActionType;
import com.ganesha.basicweb.utility.PropertiesConstants;
import com.ganesha.core.exception.AppException;
import com.ganesha.core.exception.UserException;

public class $gns{class_bl} extends BusinessLogic {

	public void create(String createBy, Timestamp createDate)
			throws AppException {

		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$gns{entity_simple_class} $gns{entity_var_name} = new $gns{entity_simple_class}();
		$gns{entity_var_name}.setUpdateDate(createDate);
		$gns{entity_var_name}.setRecStatus(GeneralConstants.REC_STATUS_ACTIVE);

		getSession().save($gns{entity_var_name});
		saveActivityLog(ActionType.CREATE, $gns{entity_var_name});

		commit();
	}
	
	public void delete(String id, String updateBy, Timestamp updateDate)
			throws UserException, AppException {
			
		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$gns{entity_simple_class} $gns{entity_var_name} = ($gns{entity_simple_class}) getSession().load($gns{entity_simple_class}.class, id);
		$gns{entity_var_name}.setUpdateBy(updateBy);
		$gns{entity_var_name}.setUpdateDate(updateDate);
		$gns{entity_var_name}.setRecStatus(GeneralConstants.REC_STATUS_NONACTIVE);

		getSession().update($gns{entity_var_name});
		saveActivityLog(ActionType.DELETE, "Delete YOUR OWN DESCRIPTION with id " + id); // TODO Auto-generated method stub

		commit();
	}
	
	public $gns{entity_simple_class} getDetail(String id) throws AppException {
		if (id == null || id.trim().isEmpty()) {
			throw new AppException(
					PropertiesConstants.ERROR_PRIMARY_KEY_REQUIRED);
		}
		
		/*
		 * TODO Auto-generated method stub
		 * Define your own criteria
		 */
		Criteria criteria = getSession().createCriteria($gns{entity_simple_class}.class);
		criteria.add(Restrictions.eq("id", id));
		criteria.add(Restrictions.eq("recStatus",
				GeneralConstants.REC_STATUS_ACTIVE));

		return ($gns{entity_simple_class}) criteria.uniqueResult();
	}
	
	public List<$gns{entity_simple_class}> search($gns{list_of_parameter_search_criteria}, Pagination pagination) throws AppException {
		// TODO Auto-generated method stub
		Criteria criteria = getSession().createCriteria($gns{entity_simple_class}.class);

		$gns{list_of_search_criteria}

		criteria.setFirstResult((pagination.getPageNumber() - 1)
				* pagination.getRowsPerPage());
		criteria.setMaxResults(pagination.getRowsPerPage());

		criteria.add(Restrictions.eq("recStatus",
				GeneralConstants.REC_STATUS_ACTIVE));

		@SuppressWarnings("unchecked")
		List<$gns{entity_simple_class}> $gns{entity_var_name}s = criteria.list();
		
		criteria.setFirstResult(0);
		criteria.setMaxResults(1);
		int rowCount = (int) criteria.setProjection(Projections.rowCount())
				.uniqueResult();
		pagination.setRowCount(rowCount);
		
		return $gns{entity_var_name}s;
	}
	
	public void update(String id, String updateBy, Timestamp updateDate)
			throws AppException {

		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$gns{entity_simple_class} $gns{entity_var_name} = ($gns{entity_simple_class}) getSession().load($gns{entity_simple_class}.class, id);
		$gns{entity_var_name}.setUpdateBy(updateBy);
		$gns{entity_var_name}.setUpdateDate(updateDate);

		getSession().save($gns{entity_var_name});
		saveActivityLog(ActionType.UPDATE, $gns{entity_var_name});

		commit();
	}
}

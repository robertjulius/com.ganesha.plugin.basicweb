package $_gns_var_package;

import java.sql.Timestamp;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;

import $_gns_var_entity_full_class;
import com.ganesha.basicweb.modules.BusinessLogic;
import com.ganesha.basicweb.utility.GeneralConstants;
import com.ganesha.basicweb.utility.GeneralConstants.ActionType;
import com.ganesha.basicweb.utility.PropertiesConstants;
import com.ganesha.core.exception.AppException;
import com.ganesha.core.exception.UserException;

public class $_gns_var_class extends BusinessLogic {

	public void create(String createBy, Timestamp createDate)
			throws AppException {

		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$_gns_var_entity_simple_class $_gns_var_entity_var_name = new $_gns_var_entity_simple_class();
		$_gns_var_entity_var_name.setUpdateDate(createDate);
		$_gns_var_entity_var_name.setRecStatus(GeneralConstants.REC_STATUS_ACTIVE);

		getSession().save($_gns_var_entity_var_name);
		saveActivityLog(ActionType.CREATE, $_gns_var_entity_var_name);

		commit();
	}
	
	public void delete(String id, String updateBy, Timestamp updateDate)
			throws UserException, AppException {
			
		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$_gns_var_entity_simple_class $_gns_var_entity_var_name = ($_gns_var_entity_simple_class) getSession().load($_gns_var_entity_simple_class.class, id);
		$_gns_var_entity_var_name.setUpdateBy(updateBy);
		$_gns_var_entity_var_name.setUpdateDate(updateDate);
		$_gns_var_entity_var_name.setRecStatus(GeneralConstants.REC_STATUS_NONACTIVE);

		getSession().update($_gns_var_entity_var_name);
		saveActivityLog(ActionType.DELETE, "Delete YOUR OWN DESCRIPTION with id " + id); // TODO Auto-generated method stub

		commit();
	}
	
	public $_gns_var_entity_simple_class getDetail(String id) throws AppException {
		if (id == null || id.trim().isEmpty()) {
			throw new AppException(
					PropertiesConstants.ERROR_PRIMARY_KEY_REQUIRED);
		}
		
		/*
		 * TODO Auto-generated method stub
		 * Define your own criteria
		 */
		Criteria criteria = getSession().createCriteria($_gns_var_entity_simple_class.class);
		criteria.add(Restrictions.eq("id", id));
		criteria.add(Restrictions.eq("recStatus",
				GeneralConstants.REC_STATUS_ACTIVE));

		return ($_gns_var_entity_simple_class) criteria.uniqueResult();
	}
	
	public List<$_gns_var_entity_simple_class> search(String searchCriteria1, String searchCriteria2,
			String searchCriteria3) throws AppException {

		/*
		 * TODO Auto-generated method stub
		 * Define your own criteria
		 */

		Criteria criteria = getSession().createCriteria($_gns_var_entity_simple_class.class);

		if (searchCriteria1 != null && !searchCriteria1.trim().isEmpty()) {
			criteria.add(Restrictions.like("searchCriteria1", "%" + searchCriteria1 + "%"));
		}

		if (searchCriteria2 != null && !searchCriteria2.trim().isEmpty()) {
			criteria.add(Restrictions.like("searchCriteria2", "%" + searchCriteria2 + "%"));
		}

		if (searchCriteria3 != null && !searchCriteria3.trim().isEmpty()) {
			criteria.add(Restrictions.like("searchCriteria3", "%"
					+ searchCriteria3 + "%"));
		}

		criteria.add(Restrictions.eq("recStatus",
				GeneralConstants.REC_STATUS_ACTIVE));

		@SuppressWarnings("unchecked")
		List<$_gns_var_entity_simple_class> users = criteria.list();
		return users;
	}
	
	public void update(String id, String updateBy, Timestamp updateDate)
			throws AppException {

		beginTransaction();

		/*
		 * TODO Auto-generated method stub
		 * Define your own object
		 */
		$_gns_var_entity_simple_class $_gns_var_entity_var_name = ($_gns_var_entity_simple_class) getSession().load($_gns_var_entity_simple_class.class, id);
		$_gns_var_entity_var_name.setUpdateBy(updateBy);
		$_gns_var_entity_var_name.setUpdateDate(updateDate);

		getSession().save($_gns_var_entity_var_name);
		saveActivityLog(ActionType.UPDATE, $_gns_var_entity_var_name);

		commit();
	}
}
